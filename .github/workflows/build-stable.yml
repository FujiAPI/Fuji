name: Build and publish stable branch

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: Tag for the release that is generated. This should use semvar `like X.Y.Z`

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build artifacts

    strategy:
      matrix:
        include:
          - { platform: macos-latest, rid: osx-arm64 }
          - { platform: macos-latest, rid: osx-x64 }
          - { platform: ubuntu-latest, rid: linux-arm }
          - { platform: ubuntu-latest, rid: linux-arm64 }
          - { platform: ubuntu-latest, rid: linux-x64 }
          - { platform: windows-latest, rid: win-x64 }

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-tags: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Build
      run: |
        dotnet publish Celeste64.Launcher/Celeste64.Launcher.csproj -c Release -r ${{ matrix.rid }} -p:ImportByWildcardBeforeSolution=false -o build
        cp -r Content Mods build

    - name: Compress
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        cd build && Compress-Archive * ../Celeste64-Fuji-${{ matrix.rid }}.zip

    - name: Compress
      if: runner.os != 'Windows'
      run: |
        cd build && zip -r ../Celeste64-Fuji-${{ matrix.rid }}.zip *

  release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-tags: true

    - name: Create draft release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ inputs.tags }} 
        commit: "${{ github.sha }}"
        artifacts: Celeste64-Fuji-${{ matrix.rid }}.zip
        body: |
          # Instructions:

          - Download and extract the zip file below according to your computer
          - Run the Celeste64-Fuji application from the extracted files

          # Requirements:

          - **Windows:** 10 or later, x64
          - **Linux:** [Distro support list](https://github.com/dotnet/core/blob/main/release-notes/8.0/supported-os.md), x64 or arm
          - **macOS:** Monterey or later, x64 or arm Intel-based or Apple Silicon with Rosetta
        allowUpdates: true
        name: "Fuji ${{ inputs.tags }} "
        prerelease: false
        makeLatest: true
        draft: true

    outputs:
      version:  ${{ inputs.tags }} 

